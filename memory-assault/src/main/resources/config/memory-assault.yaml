# Light Chaos Monkey Memory Assault Handler Configuration.
# Enable the handler if set to true so that it will be wired in the handler chain during the startup.
enabled: ${memory-assault.enabled:false}
# Bypass the current chaos monkey middleware handler so that attacks won't be triggered.
bypass: ${memory-assault.bypass:true}
# How many requests are to be attacked. 1 each request, 5 each 5th request is attacked.
level: ${memory-assault.level:10}
# Duration to assault memory when requested fill amount is reached in ms.
# min=1500, max=Integer.MAX_VALUE
memoryMillisecondsHoldFilledMemory: ${memory-assault.memoryMillisecondsHoldFilledMemory:90000}
# Time in ms between increases of memory usage.
# min=100,max=30000
memoryMillisecondsWaitNextIncrease: ${memory-assault.memoryMillisecondsWaitNextIncrease:1000}
# Fraction of one individual memory increase iteration. 1.0 equals 100 %.
# min=0.01, max = 1.0
memoryFillIncrementFraction: ${memory-assault.memoryFillIncrementFraction:0.15}
# Final fraction of used memory by assault. 0.95 equals 95 %.
# min=0.01, max = 0.95
memoryFillTargetFraction: ${memory-assault.memoryFillTargetFraction:0.25}
